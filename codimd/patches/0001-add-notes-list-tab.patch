From 31c12eec23bff66c3a92a57039c7052292d71e63 Mon Sep 17 00:00:00 2001
From: Julien Bonjean <julien.bonjean@adenops.com>
Date: Sun, 12 Jul 2020 20:27:09 -0400
Subject: [PATCH] add notes list tab

---
 lib/response.js             |  56 +++++++++
 lib/routes.js               |   2 +
 public/css/cover.css        |  16 +--
 public/js/cover.js          |   2 +
 public/js/notes.js          | 222 ++++++++++++++++++++++++++++++++++++
 public/views/index/body.ejs |  26 +++++
 webpack.common.js           |   6 +-
 7 files changed, 320 insertions(+), 10 deletions(-)
 create mode 100644 public/js/notes.js

diff --git a/lib/response.js b/lib/response.js
index 0de8f9bc..e83963db 100644
--- a/lib/response.js
+++ b/lib/response.js
@@ -9,6 +9,10 @@ const logger = require('./logger')
 const models = require('./models')
 const utils = require('./utils')
 const history = require('./history')
+const { Permission } = require('./config/enum')
+
+var Sequelize = require('sequelize')
+var Op = Sequelize.Op
 
 // public
 exports.responseError = responseError
@@ -18,6 +22,7 @@ exports.errorBadRequest = errorBadRequest
 exports.errorTooLong = errorTooLong
 exports.errorInternalError = errorInternalError
 exports.errorServiceUnavailable = errorServiceUnavailable
+exports.listNotes = listNotes
 exports.newNote = newNote
 exports.showPublishSlide = showPublishSlide
 exports.publishNoteActions = publishNoteActions
@@ -87,6 +92,57 @@ function updateHistory (userId, note, document, time) {
   logger.info('history updated')
 }
 
+function getNotes (req, callback) {
+  const P = Permission
+  const authStatus = req.isAuthenticated()
+  let condition = { permission: { [Op.in]: [P.freely, P.editable, P.locked] } }
+  if (authStatus) {
+    condition = {
+      [Op.or]: [
+        {
+          permission: {
+            [Op.in]: [P.freely, P.editable, P.limited, P.locked, P.protected]
+          }
+        },
+        {
+          permission: P.private,
+          ownerId: req.user.id
+        }
+      ]
+    }
+  }
+  models.Note.findAll({
+    attributes: ['id', 'title', 'content', 'updatedAt', 'permission'],
+    where: condition
+  })
+  .then(result => {
+    var notes = null
+    notes = result.map(note => {
+      return {
+        id: models.Note.encodeNoteId(note.id),
+        text: note.title,
+        tags: models.Note.parseNoteInfo(note.content).tags,
+        time: Date.parse(note.updatedAt),
+        permission: note.permission
+      }
+    })
+    return callback(null, notes)
+  }).catch(err => {
+    logger.error(err)
+    return callback(err, {})
+  })
+}
+
+function listNotes (req, res, next) {
+  getNotes(req, (err, notes) => {
+    if (err) return errorInternalError(res)
+    if (!notes) return errorNotFound(res)
+    res.send({
+      notes: notes
+    })
+  })
+}
+
 function newNote (req, res, next) {
   var owner = null
   var body = ''
diff --git a/lib/routes.js b/lib/routes.js
index f4345039..5a255166 100644
--- a/lib/routes.js
+++ b/lib/routes.js
@@ -58,6 +58,8 @@ appRouter.get('/user/:username/avatar.svg', userController.getMyAvatar)
 // register image upload module
 appRouter.use(require('./imageRouter'))
 
+// get all notes
+appRouter.get('/list', response.listNotes)
 // get new note
 appRouter.get('/new', response.newNote)
 // post new note with content
diff --git a/public/css/cover.css b/public/css/cover.css
index 4693c9c3..96c5e935 100644
--- a/public/css/cover.css
+++ b/public/css/cover.css
@@ -279,17 +279,17 @@ input {
 .ui-avatar.circle {
     border-radius: 50%;
 }
-.ui-history-close {
+.ui-history-close, .ui-notes-close {
     position: absolute;
     right: 14px;
     top: 15px;
     font-size: 16px;
     opacity: 0.5;
 }
-.ui-history-close:hover {
+.ui-history-close:hover, .ui-notes-close:hover {
     opacity: 1;
 }
-.ui-history-pin {
+.ui-history-pin, .ui-notes-pin {
     position: absolute;
     left: 14px;
     top: 15px;
@@ -298,17 +298,17 @@ input {
 	transition: opacity 0.2s ease-in-out;
 	-webkit-transition: opacity 0.2s ease-in-out;
 }
-.item:hover .ui-history-pin:hover {
+.item:hover .ui-history-pin:hover, .item:hover .ui-notes-pin:hover {
     opacity: 1;
 }
-.item .ui-history-pin.active {
-	opacity: 1;
+.item .ui-history-pin.active, .item .ui-notes-pin.active {
+    opacity: 1;
     color: #d43f3a;
 }
 .ui-or {
     margin: 5px;
 }
-.ui-use-tags {
+.ui-use-tags, .ui-use-note-tags {
     min-width: 172px;
     max-width: 344px;
 }
@@ -368,7 +368,7 @@ select {
     span.ui-or {
         display: block;
     }
-    .ui-use-tags {
+    .ui-use-tags, .ui-use-note-tags {
         max-width: 100%;
     }
 }
diff --git a/public/js/cover.js b/public/js/cover.js
index 10111bfa..a2bb4916 100644
--- a/public/js/cover.js
+++ b/public/js/cover.js
@@ -75,6 +75,7 @@ function pageInit () {
       else $('.ui-avatar').prop('src', '').hide()
       $('.ui-name').html(data.name)
       $('.ui-signout').show()
+      $('.ui-notes').show()
       $('.ui-history').click()
       parseServerToHistory(historyList, parseHistoryCallback)
     },
@@ -85,6 +86,7 @@ function pageInit () {
       $('.ui-avatar').prop('src', '').hide()
       $('.ui-name').html('')
       $('.ui-signout').hide()
+      $('.ui-notes').hide()
       parseStorageToHistory(historyList, parseHistoryCallback)
     }
   )
diff --git a/public/js/notes.js b/public/js/notes.js
new file mode 100644
index 00000000..fb459068
--- /dev/null
+++ b/public/js/notes.js
@@ -0,0 +1,222 @@
+/* eslint-env browser, jquery */
+/* global moment, serverurl */
+
+require('./locale')
+
+require('../css/cover.css')
+require('../css/site.css')
+
+import List from 'list.js'
+import escapeHTML from 'lodash/escape'
+import unescapeHTML from 'lodash/unescape'
+
+const options = {
+  valueNames: ['id', 'text', 'timestamp', 'time', 'tags', 'permission'],
+  item: `<li class="col-xs-12 col-sm-6 col-md-6 col-lg-4">
+          <span class="id" style="display:none;"></span>
+          <a href="#">
+            <div class="item">
+              <div class="content">
+                <h4 class="text"></h4>
+                <div><p class="permission" style="margin-bottom: 0;"></p></div>
+                <p>
+                  <i class="timestamp" style="display:none;"></i>
+                  <i class="time"></i>
+                </p>
+                <p class="tags"></p>
+              </div>
+            </div>
+          </a>
+        </li>`,
+  page: 18,
+  pagination: [{
+    outerWindow: 1
+  }]
+}
+const noteList = new List('notes', options)
+
+$('.ui-notes').click(() => {
+  if (!$('#notes').is(':visible')) {
+    $('.section:visible').hide()
+    $('#notes').fadeIn()
+  }
+})
+
+parseNotes(noteList, parseNotesCallback)
+
+const PERMS =     ["freely" , "editable" , "limited"   , "locked" , "protected"  , "private"]
+const PERM_ICON = ["fa-leaf", "fa-shield", "fa-id-card", "fa-lock", "fa-umbrella", "fa-hand-stop-o"]
+
+
+function formatPermission(str){
+  let idx = PERMS.indexOf(str)
+  if (idx === -1){
+    return "??"
+  }
+  return `<i class="fa ${PERM_ICON[idx]} fa-fw"></i> ${str}`
+}
+
+function parseToNotes (list, notes, callback) {
+  if (!callback) return
+  else if (!list || !notes) callback(list, notes)
+  else if (notes && notes.length > 0) {
+    for (let i = 0; i < notes.length; i++) {
+      // parse time to timestamp
+      const timestamp = (typeof notes[i].time === 'number' ? moment(notes[i].time) : moment(notes[i].time, 'MMMM Do YYYY, h:mm:ss a'))
+      notes[i].timestamp = timestamp.valueOf()
+      notes[i].time = timestamp.format('llll')
+      notes[i].permission =  formatPermission(notes[i].permission)
+      // prevent XSS
+      notes[i].text = escapeHTML(notes[i].text)
+      notes[i].tags = (notes[i].tags && notes[i].tags.length > 0) ? escapeHTML(notes[i].tags).split(',') : []
+      // add to list
+      if (notes[i].id && list.get('id', notes[i].id).length === 0) { list.add(notes[i]) }
+    }
+  }
+  callback(list, notes)
+}
+
+function parseNotes (list, callback) {
+  $.get(`${serverurl}/list`)
+    .done(data => {
+      if (data.notes) {
+        parseToNotes(list, data.notes, callback)
+      }
+    })
+    .fail((xhr, status, error) => {
+      console.error(xhr.responseText)
+    })
+}
+
+function checkNoteList () {
+  if ($('#notes-list').children().length > 0) {
+    $('.pagination').show()
+    $('.ui-nonotes').hide()
+  } else if ($('#notes-list').children().length === 0) {
+    $('.pagination').hide()
+    $('.ui-nonotes').slideDown()
+  }
+}
+
+function parseNotesCallback (list, notes) {
+  checkNoteList()
+  // sort by timestamp
+  list.sort('', {
+    sortFunction (a, b) {
+      const notea = a.values()
+      const noteb = b.values()
+      if (notea.timestamp > noteb.timestamp) {
+        return -1
+      } else if (notea.timestamp < noteb.timestamp) {
+        return 1
+      } else {
+        return 0
+      }
+    }
+  })
+  // parse filter tags
+  const filtertags = []
+  for (let i = 0, l = list.items.length; i < l; i++) {
+    const tags = list.items[i]._values.tags
+    if (tags && tags.length > 0) {
+      for (const tag of tags) {
+        // push info filtertags if not found
+        if (!filtertags.includes(tag)) {
+          filtertags.push(tag)
+        }
+      }
+    }
+  }
+  buildTagsFilter(filtertags)
+}
+
+// update items whenever list updated
+noteList.on('updated', e => {
+  for (const item of e.items) {
+    if (item.visible()) {
+      const itemEl = $(item.elm)
+      const values = item._values
+      const a = itemEl.find('a')
+      const tagsEl = itemEl.find('.tags')
+      // parse link to element a
+      a.attr('href', `${serverurl}/${values.id}`)
+      // parse tags
+      const tags = values.tags
+      if (tags && tags.length > 0 && tagsEl.children().length <= 0) {
+        const labels = []
+        for (const tag of tags) {
+          // push into the item label
+          labels.push(`<span class='label label-default'>${tag}</span>`)
+        }
+        tagsEl.html(labels.join(' '))
+      }
+    }
+  }
+})
+
+$('.ui-refresh-notes').click(() => {
+  const lastTags = $('.ui-use-note-tags').select2('val')
+  $('.ui-use-note-tags').select2('val', '')
+  noteList.filter()
+  const lastKeyword = $('.search-notes').val()
+  $('.search-notes').val('')
+  noteList.search()
+  $('#notes-list').slideUp('fast')
+  $('.pagination').hide()
+
+  noteList.clear()
+  parseNotes(noteList, (list, notes) => {
+    parseNotesCallback(list, notes)
+    $('.ui-use-note-tags').select2('val', lastTags)
+    $('.ui-use-note-tags').trigger('change')
+    noteList.search(lastKeyword)
+    $('.search-notes').val(lastKeyword)
+    checkNoteList()
+    $('#notes-list').slideDown('fast')
+  })
+})
+
+let filtertags = []
+$('.ui-use-note-tags').select2({
+  placeholder: $('.ui-use-note-tags').attr('placeholder'),
+  multiple: true,
+  data () {
+    return {
+      results: filtertags
+    }
+  }
+})
+$('.select2-input').css('width', 'inherit')
+buildTagsFilter([])
+
+function buildTagsFilter (tags) {
+  for (let i = 0; i < tags.length; i++) {
+    tags[i] = {
+      id: i,
+      text: unescapeHTML(tags[i])
+    }
+  }
+  filtertags = tags
+}
+$('.ui-use-note-tags').on('change', function () {
+  const tags = []
+  const data = $(this).select2('data')
+  for (let i = 0; i < data.length; i++) { tags.push(data[i].text) }
+  if (tags.length > 0) {
+    noteList.filter(item => {
+      const values = item.values()
+      if (!values.tags) return false
+      for (let t of tags) {
+        if (values.tags.includes(t)) {
+          return true
+        }
+      }
+      return false
+    })
+  } else {
+    noteList.filter()
+  }
+  checkNoteList()
+})
+
+$('.search-notes').keyup(checkNoteList)
diff --git a/public/views/index/body.ejs b/public/views/index/body.ejs
index 7b520070..95b47f3a 100644
--- a/public/views/index/body.ejs
+++ b/public/views/index/body.ejs
@@ -9,6 +9,8 @@
                         <ul class="nav masthead-nav">
                             <li class="ui-home<% if(!signin) { %> active<% } %>"><a href="#"><%= __('Intro') %></a>
                             </li>
+                            <li class="ui-notes"><a href="#"><%= __('Notes') %></a>
+                            </li>
                             <li class="ui-history<% if(signin) { %> active<% } %>"><a href="#"><%= __('History') %></a>
                             </li>
                             <div class="ui-signin" style="float: right; margin-top: 8px;<% if(signin) { %> display: none;<% } %>">
@@ -86,6 +88,30 @@
                 </div>
             </div>
 
+            <div id="notes" class="section" style="display:none;">
+                <form class="form-inline">
+                    <div class="form-group" style="vertical-align: bottom;">
+                        <input class="form-control ui-use-note-tags" placeholder="<%= __('Select tags...') %>" />
+                    </div>
+                    <div class="form-group">
+                        <input class="search search-notes form-control" placeholder="<%= __('Search keyword...') %>" />
+                    </div>
+                    <a href="#" class="sort btn btn-default" data-sort="text" title="<%= __('Sort by title') %>">
+                    <%= __('Title') %>
+                    </a>
+                    <a href="#" class="sort btn btn-default" data-sort="timestamp" title="<%= __('Sort by time') %>">
+                    <%= __('Time') %>
+                    </a>
+                    <a href="#" class="btn btn-default ui-refresh-notes" title="<%= __('Refresh notes') %>"><i class="fa fa-refresh"></i></a>
+                </form>
+                <h4 class="ui-nonotes" style="display:none;">
+                    <%= __('No notes') %>
+                </h4>
+                <ul id="notes-list" class="list">
+                </ul>
+                <ul class="pagination"></ul>
+            </div>
+
             <div id="history" class="section"<% if(!signin) { %> style="display:none;"<% } %>>
                 <div class="ui-signin"<% if(signin) { %> style="display:none;"<% } %>>
                     <p><%= __('Below is the history from browser') %></p>
diff --git a/webpack.common.js b/webpack.common.js
index 6347fdb8..7064da06 100644
--- a/webpack.common.js
+++ b/webpack.common.js
@@ -201,7 +201,8 @@ module.exports = {
     ],
     cover: [
       'babel-polyfill',
-      path.join(__dirname, 'public/js/cover.js')
+      path.join(__dirname, 'public/js/cover.js'),
+      path.join(__dirname, 'public/js/notes.js')
     ],
     'cover-styles-pack': [
       path.join(__dirname, 'node_modules/bootstrap/dist/css/bootstrap.min.css'),
@@ -215,7 +216,8 @@ module.exports = {
       'bootstrap-validator',
       'expose-loader?select2!select2',
       'expose-loader?moment!moment',
-      path.join(__dirname, 'public/js/cover.js')
+      path.join(__dirname, 'public/js/cover.js'),
+      path.join(__dirname, 'public/js/notes.js')
     ],
     index: [
       'babel-polyfill',
-- 
2.27.0

